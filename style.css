:root {
  --accent: rgb(255, 120, 0);
  --accent-faded: rgb(180, 120, 80);
  --base: rgb(50, 50, 50);
  --base-faded: rgb(100, 100, 100);
  --height: 100%;
}

html {
  height: 100%;
  width: 100%;
}

body {
  background-color: var(--base);
  font-family: 'Rubik', sans-serif;
  -webkit-tap-highlight-color: transparent;
  user-select: none;
  display: flex;
  flex-wrap: wrap;
  align-content: space-between;
  justify-content: center;
  width: 100%;
  height: 100%;
  margin: 0px;
  overflow: hidden;
  border-top: 0px solid var(--base);
}

/* Sudoku board */
.sudoku {
  height: 45%;
  transition: all 3.5s;
  aspect-ratio: 1;
  border-collapse: collapse;
  margin: 10px 50%;
}

/* Sudoku cell divider */
td {
  position: relative;
  width: 10%;
}

/* Sudoku main lines */
tr td:nth-child(3),
tr td:nth-child(6) {
  border-right: 2px solid var(--accent);
}

tr:nth-child(3) td,
tr:nth-child(6) td {
  border-bottom: 2px solid var(--accent);
}

/* Sudoku separators verical*/
.cellBorder:nth-child(3n+1)::after,
.cellBorder:nth-child(3n+2)::after {
  content: "";
  position: absolute;
  top: 0px;
  right: -1px;
  width: 1px;
  height: 60%;
  margin: 20% 0;
  background-color: var(--base-faded);
  transition: all 3s;
}

/* While sudoku board is slinding */
.end .cellBorder:nth-child(3n+1)::after,
.end .cellBorder:nth-child(3n+2)::after {
  content: "";
  position: absolute;
  top: 0px;
  right: -1px;
  width: 1px;
  height: 60%;
  margin: 20% 0;
  background-color: var(--accent) !important;
}

/* After sudoku slide */
.cellBorderAnim:nth-child(3n+1)::after,
.cellBorderAnim:nth-child(3n+2)::after {
  content: "";
  position: absolute;
  top: 0px;
  right: -1px;
  width: 1px;
  height: 60%;
  margin: 20% 0;
  animation-name: shimmer;
  animation-duration: 7s;
  animation-iteration-count: infinite;
  background-color: var(--accent);
}

/* Sudoku separators horizontal */
tr:nth-child(3n+1) .cellBorder::before,
tr:nth-child(3n+2) .cellBorder::before {
  content: "";
  position: absolute;
  bottom: -1px;
  width: 60%;
  height: 1px;
  margin: 0 20%;
  background-color: var(--base-faded);
  transition: all 3s;
}

/* While sudoku board is slinding */
.end tr:nth-child(3n+1) .cellBorder::before,
.end tr:nth-child(3n+2) .cellBorder::before {
  content: "";
  position: absolute;
  bottom: -1px;
  width: 60%;
  height: 1px;
  margin: 0 20%;
  background-color: var(--accent) !important;
}

/* After sudoku slide */
tr:nth-child(3n+1) .cellBorderAnim::before,
tr:nth-child(3n+2) .cellBorderAnim::before {
  content: "";
  position: absolute;
  bottom: -1px;
  width: 60%;
  height: 1px;
  margin: 0 20%;
  animation-name: shimmer;
  animation-duration: 7s;
  animation-iteration-count: infinite;
  background-color: var(--accent)
}

/* Sudoku cell */
.cell {
  cursor: pointer;
  width: 100%;
  aspect-ratio: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: 'Rubik', sans-serif;
  -webkit-tap-highlight-color: transparent;
}

/* Digit inside sudoku cell */
.digit {
  background-color: var(--base-faded);
  width: 80%;
  height: 80%;
  border-radius: 100%;
  text-align: center;
  color: var(--base);
  line-height: calc(var(--height) * 3.8 / 100);
  font-size: calc(var(--height) * 2.7 / 100);
}

.unlocked {
  background-color: var(--base);
  color: white;
}

/* Pencil digit container inside sudoku cell */
.pencil {
  width: 80%;
  height: 80%;
  border-radius: 100%;
  font-size: calc(var(--height) * 0.9 / 100);
  color: white;
  display: flex;
  flex-wrap: wrap;
  align-content: flex-end;
  justify-content: center;
  padding: 10% 5%;
  box-sizing: border-box;
}

.pencilDigit {
  width: calc(var(--height) * 0.95 / 100);
  height: calc(var(--height) * 0.95 / 100);
  text-align: center;
}

/* Highlight for same digit cells */
.highlight {
  background-color: var(--accent-faded);
  color: var(--base);
  animation-name: pop;
  animation-duration: 200ms;
}

/* Active cell or UIdigit */
.active {
  background-color: var(--accent);
  color: var(--base);
  animation-name: pop;
  animation-duration: 200ms;
}

/* Pop animation for active */
@keyframes pop {
  0% {
    scale: 1;
  }

  60% {
    scale: 1.2;
  }

  100% {
    scale: 1;
  }
}

/* Keypad containter */
.UIdigits {
  display: flex;
  height: 15%;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  aspect-ratio: 2.6/1;
  margin: 0 50%;
}

/* Keypad digits */
.UIdigit {
  width: 16%;
  aspect-ratio: 1;
  text-align: center;
  font-weight: bold;
  color: white;
  cursor: pointer;
  position: relative;
  margin: calc(var(--height) * 0.5 / 100);
  border-radius: 100%;
  border: 1px solid var(--base-faded);
  transition: background 0.4s, border 0.4s, color 0.4s;
  -webkit-tap-highlight-color: transparent;
}

.UIdigitID {
  line-height: calc(var(--height) * 6 / 100);
  font-size: calc(var(--height) * 3.2 / 100);
}

.UIdigitCount {
  line-height: calc(var(--height) * 1.5 / 100);
  font-size: calc(var(--height) * 1.5 / 100);
  color: var(--base-faded);
  width: 100%;
  position: absolute;
  bottom: 0px;
}

/* Active UIdigit styles */
.UIdigitEnabled,
.UIdigit:active {
  transition: all 0s;
  background-color: var(--accent);
  border-color: var(--accent);
  color: var(--base);
}

.UIdigitEnabled .UIdigitID,
.UIdigitEnabled .UIdigitCount {
  color: var(--base);
  transition: all 0s;
}

/* Options toolbar */
.UIoptions {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  height: 8%;
  aspect-ratio: 8/1;
  margin: 0 50%;
}

.UIoption {
  width: 14%;
  aspect-ratio: 2/1;
  font-size: calc(var(--height) * 3.2 / 100);
  line-height: calc(var(--height) * 4.5 / 100);
  text-align: center;
  color: white;
  font-weight: bold;
  cursor: pointer;
  border-radius: 200px;
  border: 1px solid var(--base);
  transition: background 0.4s, border 1s;
  margin: calc(var(--height) * 1 / 100);
}

.UIoption:active {
  transition: all 0s;
  background-color: var(--accent);
  border-color: var(--accent);
  color: var(--base-faded);
}

.UIoptionEnabled {
  transition: all 0s;
  background-color: var(--accent);
  border-color: var(--accent);
  color: var(--base-faded);
}

/* End styling */
.end .sudoku {
  margin-top: calc(var(--height) * 1 / 8);
}

.end .UIdigits,
.end .UIoptions {
  transition: opacity 2s;
  opacity: 0;
}

.end .digit {
  transition: all 3.5s;
  background-color: var(--base);
  color: white;
}

@keyframes shimmer {
  0% {
    background-color: var(--accent);
  }

  50% {
    background-color: var(--base);
  }

  100% {
    background-color: var(--accent);
  }
}

/* Restart button */
.restart {
  height: 6%;
  aspect-ratio: 1;
  text-align: center;
  font-size: calc(var(--height) * 3.7 / 100);
  line-height: calc(var(--height) * 5.5 / 100);
  font-weight: bold;
  transition: all 2s;
  opacity: 0;
  border: 1px solid var(--base-faded);
  border-radius: 100%;
  color: white;
  margin-bottom: calc(var(--height) * 1 / 10);
  cursor: pointer;
}

.restart:active {
  transition: all 0s !important;
  background-color: var(--accent);
  border-color: var(--accent);
  color: var(--base-faded);
}

.end.restart {
  transition: all 2s;
  opacity: 1;
}